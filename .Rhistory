print("Hoola")
library(ggpubr)
library(ggpubr)
require(ggplot2)
require(ggpubr)
# Vamos a usar los colores que usa ggplot
rcolour <- hcl(h = (seq(15, 255, length.out = 3)), c = 100, l = 65)
require(ggplot2)
require(ggpubr)
# Vamos a usar los colores que usa ggplot
rcolour <- hcl(h = (seq(15, 255, length.out = 3)), c = 100, l = 65)
np <- 208 * 10
cat("\n\n")
cat("Dureza de las barras\n")
cat("====================\n")
cat("\n")
cat("H0: μ = 0\n")
cat("HA: μ <> 0\n")
media <- 170
desviacion <- 10
tamaño.muestra <- 25
est.err <- desviacion / sqrt(tamaño.muestra)
x <- seq(media - 5.2 * est.err, media + 5.2 * est.err, length.out = np)
y <- dnorm(x, mean = media, sd = est.err)
d <- data.frame(x, y)
p1 <- ggplot(d,aes(x))
p1 <- p1 + stat_function(
fun = dnorm,
n = np,
args = list(mean = media, sd = est.err),
colour = rcolour[1], size = 1
)
p1 <- p1 + theme_pubr()
p1 <- p1 + theme(axis.text.x = element_text(angle = 30, size = 10))
p1 <- p1 + geom_vline(xintercept = media,
colour = rcolour[1], linetype = "longdash"
)
# Ahora marquemos las regiones críticas definida por el ingeniero:
p2 <- p1 + geom_area(data = subset(d,x < 168), aes(y = y), color = "#EF4D10", fill = "#EF4D10", alpha=0.5)
p2 <- p2 + geom_area(data = subset(d,x > 172), aes(y = y), color = "#EF4D10", fill = "#EF4D10", alpha=0.5)
alfa.izq <- pnorm(168,media,est.err,lower.tail = TRUE)
alfa.derecha <-pnorm(172,media,est.err,lower.tail = FALSE)
alfa <- alfa.izq + alfa.derecha
cat("\n")
cat("D1. α = ", alfa, "\n", sep = "")
cat("\n")
p3 <- p1 + geom_area( data = subset(d,x > 172) , aes(y = y), color = "#EF4D10", fill = "#EF4D10", alpha=0.5)
alfa.dos <- pnorm(172,170,est.err,lower.tail = FALSE)
print(alfa.dos)
media1 <- 173
x1 <- seq(media1 -5.2 * est.err, media1 + est.err * 5.2,length.out = np)
y1 <- dnorm(x1, mean = media1, sd = est.err)
d1 <- data.frame(x = x1, y = y1)
source('~/Documentos/Ime/poder.r')
p4
install.packages("ggpubr")
require(ggplot2)
require(ggpubr)
install.packages("ggpubr")
source('~/Documentos/Ime/poder.r')
p4
source('~/Documentos/AD/proyecto/proyect.r')
setwd(~/Documents/AD/proyecto)
setwd("~/Documents/AD/proyecto")
setwd("~/Documentos/AD/proyecto")
source('~/Documentos/AD/proyecto/proyect.r')
summary(data_sin_nombre)
p
View(data)
View(data)
cp
library(caret)
install.packages("caret")

print("Hoola")
library(ggpubr)
library(ggpubr)
require(ggplot2)
require(ggpubr)
# Vamos a usar los colores que usa ggplot
rcolour <- hcl(h = (seq(15, 255, length.out = 3)), c = 100, l = 65)
require(ggplot2)
require(ggpubr)
# Vamos a usar los colores que usa ggplot
rcolour <- hcl(h = (seq(15, 255, length.out = 3)), c = 100, l = 65)
np <- 208 * 10
cat("\n\n")
cat("Dureza de las barras\n")
cat("====================\n")
cat("\n")
cat("H0: μ = 0\n")
cat("HA: μ <> 0\n")
media <- 170
desviacion <- 10
tamaño.muestra <- 25
est.err <- desviacion / sqrt(tamaño.muestra)
x <- seq(media - 5.2 * est.err, media + 5.2 * est.err, length.out = np)
y <- dnorm(x, mean = media, sd = est.err)
d <- data.frame(x, y)
p1 <- ggplot(d,aes(x))
p1 <- p1 + stat_function(
fun = dnorm,
n = np,
args = list(mean = media, sd = est.err),
colour = rcolour[1], size = 1
)
p1 <- p1 + theme_pubr()
p1 <- p1 + theme(axis.text.x = element_text(angle = 30, size = 10))
p1 <- p1 + geom_vline(xintercept = media,
colour = rcolour[1], linetype = "longdash"
)
# Ahora marquemos las regiones críticas definida por el ingeniero:
p2 <- p1 + geom_area(data = subset(d,x < 168), aes(y = y), color = "#EF4D10", fill = "#EF4D10", alpha=0.5)
p2 <- p2 + geom_area(data = subset(d,x > 172), aes(y = y), color = "#EF4D10", fill = "#EF4D10", alpha=0.5)
alfa.izq <- pnorm(168,media,est.err,lower.tail = TRUE)
alfa.derecha <-pnorm(172,media,est.err,lower.tail = FALSE)
alfa <- alfa.izq + alfa.derecha
cat("\n")
cat("D1. α = ", alfa, "\n", sep = "")
cat("\n")
p3 <- p1 + geom_area( data = subset(d,x > 172) , aes(y = y), color = "#EF4D10", fill = "#EF4D10", alpha=0.5)
alfa.dos <- pnorm(172,170,est.err,lower.tail = FALSE)
print(alfa.dos)
media1 <- 173
x1 <- seq(media1 -5.2 * est.err, media1 + est.err * 5.2,length.out = np)
y1 <- dnorm(x1, mean = media1, sd = est.err)
d1 <- data.frame(x = x1, y = y1)
source('~/Documentos/Ime/poder.r')
p4
install.packages("ggpubr")
require(ggplot2)
require(ggpubr)
install.packages("ggpubr")
source('~/Documentos/Ime/poder.r')
p4
# Indicar directorio
dir <- "~/Documentos/Ime"
basename <- "body.csv"
file <- file.path(dir, basename)
datos.todos <- read.csv(
file = file,
sep = ""
)
# Tomamos la misma muestra con igual número de varones y mujeres
i <- which(datos.todos[["Gender"]] == 0)
j <- which(datos.todos[["Gender"]] == 1)
set.seed(13)
N <- 15
i <- sample(i, N)
j <- sample(j, N)
datos.wide <- datos.todos[c(i, j), ]
BMI <- round(datos.wide[["Weight"]] / (datos.wide[["Height"]] / 100)^2, 1)
categoría <- rep("Normal", length(BMI))
categoría[BMI >= 25] <- "Sobrepeso"
# Llevamos los datos a formato largo para su análisis
library(tidyr)
datos.long <- gather(datos.wide, key = "Medida", value = "Valor")
datos.long[["Medida"]] <- factor(datos.long[["Medida"]])
datos.long
# Agregamos la clase: Normal o Sobrepeso
datos.long[["Categoría"]] <- factor(rep(categoría, ncol(datos.wide)))
datos.wide[["Categoría"]] <- factor(categoría)
library(ggpubr)
pb <- ggboxplot(
data = datos.long,
x = "Categoría", y = "Valor",
color = "Medida", legend = "none"
)
pbf <- facet(pb, facet.by = "Medida", scales = "free")
pbf
categoría <- rep("Normal", length(BMI))
categoría[BMI >= 25] <- "Sobrepeso"
# Llevamos los datos a formato largo para su análisis
library(tidyr)
datos.long <- gather(datos.wide, key = "Medida", value = "Valor")
datos.long[["Medida"]] <- factor(datos.long[["Medida"]])
# Agregamos la clase: Normal o Sobrepeso
datos.long[["Categoría"]] <- factor(rep(categoría, ncol(datos.wide)))
datos.wide[["Categoría"]] <- factor(categoría)
library(ggpubr)
pb <- ggboxplot(
data = datos.long,
x = "Categoría", y = "Valor",
color = "Medida", legend = "none"
)
pbf <- facet(pb, facet.by = "Medida", scales = "free")
library(gmodels)
CrossTable(
datos.wide[["Gender"]], datos.wide[["Categoría"]],
format = "SPSS", expected = TRUE
)
# Vamos a crear nuestro primer modelo, que incluye a todas las variables
# (por eso "~ .")
modelo <- glm(
Categoría ~ .,
family = binomial(link = "logit"),
data = datos.wide
)
print(summary(modelo))
library(ggplot2)
library(ggpubr)
# Indicar directorio
dir <- "~/Descargas"
basename <- "Casen 2017.csv"
file <- file.path(dir, basename)
library(ggpubr)
library(scatterplot3d)
library(ggplot2)
head <- c("animal name","hair",
"feathers","eggs","milk","airborne","aquatic","predator",
"toothed","backbone","breathes","venomous","fins","legs",
"tail","domestic","catsize","type")
data <- read.table("zoo.data",header = FALSE, sep = ",")
setwd("~/Documentos/AD")
library(ggpubr)
library(scatterplot3d)
library(ggplot2)
head <- c("animal name","hair",
"feathers","eggs","milk","airborne","aquatic","predator",
"toothed","backbone","breathes","venomous","fins","legs",
"tail","domestic","catsize","type")
data <- read.table("zoo.data",header = FALSE, sep = ",")
setwd("~/Documentos/AD/proyecto")
library(ggpubr)
library(scatterplot3d)
library(ggplot2)
head <- c("animal name","hair",
"feathers","eggs","milk","airborne","aquatic","predator",
"toothed","backbone","breathes","venomous","fins","legs",
"tail","domestic","catsize","type")
data <- read.table("zoo.data",header = FALSE, sep = ",")
colnames(data) <- head
ph <- gghistogram(
data,
x = "type",
add = "mean",
color = "#1631D8"
)
ph
ph <- gghistogram(
data,
x = "type",
add = "mean",
color = "#1631D8",
bins = 40
)
ph
ph <- gghistogram(
data,
x = "type",
add = "mean",
color = "#1631D8",
bins = 5
)
pf
ph
ph <- gghistogram(
data,
x = "type",
add = "mean",
color = "#1631D8",
bins = 7
)
ph
p <- ggboxplot(
data,
x = "type"
, y = "legs",add = "mean"
, add.params = list(color = "#FC4E07"),
color = "legs",title = "Cantidad de patas por tipo",ylab = "Cantidad de piernas"
)
p
